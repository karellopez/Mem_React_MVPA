* 3.999I 2025/02/19
Fixed libsvm_multitarget test (model was returned with wrong name) & 
adapted transres_predicted_(and_true_)labels_multitarget + demo12

* 3.999H 2024/10/14
Fixed liblinear train and test (parameters not correct for regression, no 
model was returned) & fixed transres_signed_decision_values

* 3.999G 2024/08/27
Fixed bug that all prevalence result img files for ROIs contained results of first ROI

* 3.999F 2022/08/15
- Added min0max1global scaling and improved auto-speedup detection for libsvm
- Added demo13 how to load a design from a .csv
- Added make_design_timeresolved to create time-resolved designs

* 3.999E2 2021/11/16
Fixed bug in transres_confusion_matrix_plus_undecided, see demo3_1

* 3.999E 2021/09/09
Quite some changes (despite the seemingly small change of the little E added 
to the version number):
- Added a confusion matrix with an undecided column (the standard confusion 
  matrix adds undecided test cases to the first class), see demo3_1
- Changed extension to store design matrices: using .pdf instead of .eps as default 
  (Matlab decided to store .eps no longer as vector graphics)
- Introduced parameter change and a error if libsvm is used without scaling
  (can be extremely slow). Note: Change the error to an warning if to be 
  backward-compatible.
- Add multitarget functionality, see demo12

* 3.999D_beta 2021/03/16 BETA not for public release
* 3.999C_beta 2020/12/10 BETA not for public release

* 3.999 2020/06/17
(identical to 3.999B_beta 2020/06/17)
- Fixed bug that transres_accuracy_matrix & transres_accuracy_pairwise 
  and both _minus_chance versions produced wrong results (only worse, not too 
  systematically to good) when label order was not increasing.
- Introduced option to add chancelevel from transres functions (see 
  decoding_transform_results).
- Different further improvements, incl. bugfixes that allow using decoding() in PARFOR.
- Further changes:
- typical errors detected when nans occur for corr and zcorr outputs
- improved explanation & implementation of prevalence
- weights for regression

* 3.997 2019/04/29
- reporting searchlight size (e.g. in number of voxels) in results file
- fixed minor bugs

* 3.995 2019/01/23
- fixed bug in sort_design.m that prevented it from working

* 3.994 2018/09/17
- change in how decision_values and predicted_labels are passed back when requested (was
  per run in separate cells, is now concatenated in one vector for simpler handling)

* 3.993 2018/07/31
- added prepare_tdt_compiler.m to allow compilation of TDT for server
- added new transres_MSS_diff.m (for support vector regression)
- minor bugfixes

* 3.991 2018/01/22
- bugfix in reading and writing +tlrc with AFNI which was is some cases not functional before
- minor bugfix in display_regressor_names for AFNI

* 3.99 2017/11/15
- more and easier to use templates 
- more general use of get_filenames possible
- added more RSA output measures (Pearson correlation, Spearman's rho, Kendall's tau)
- minor bugfixes

* 3.98 2017/07/01
- more intutive crossnobis distance estimation (including template)
- distance_train and distance_test allows for distance calculation across 
  averaged data (simpler than similarity_train and similarity_test for 
  cases when averaging is required)
- sort_design.m fixed, will now really sort the design to improve speed
- slight improvements to prevalence demo

* 3.97 - 2017/02/12
- Fixed bug where AUCstats would report inverted values when the order of 
  labels was different than in template (introduced in V3.94 and accidentally 
  not fixed in 3.95)
- Added AUCstats_matrix and AUCstats_pairwise for AUC with more than two 
  classes (all pairwise comparisons reported in a matrix or averaged) 
- Replaces strsplit with regexp to reintroduce backward compatibility to 
  at least R2009a.
- Added additional checks and minor fixes.

* 3.96 - 2016/12/10
- Fixed small bug in make_design_cv that wouldn't allow using sets under 
  all conditions
- Fixed bug that prevented use of multiple models in transers_SVM_pattern
- Added smaller utilities

* 3.95 - 2016/08/25
- Allow using kernel classification for output SVM_pattern
- Completed conversion of order to be correct
- Updated decoding_feature_transformation and transfeat function
- Added some test scripts to the benchmark folder

* 3.94 - 2016/08/22
- Allow using kernel classification for output SVM_weights
- Order of weights and decision values as outputs now not dependent on 
  order of labels in input (e.g. [3 1 2 5 4]), but now invariantly sorted 
  by label (e.g. [1 2 3 4 5]) -> affects transres_SVM_ functions as well 
  as libsvm_test and correlation_classifier
- Removed bug in SPM5 and SPM8 functions with double &&
- other small fixes

* 3.93 - 2016/08/04
- Prevalence Inference added. For details, see
  Allefeld, C., Goergen, K., & Haynes, J.-D. (2016). 
      Valid population inference for information-based imaging: From the 
      second-level t-test to prevalence inference. NeuroImage. 
      http://doi.org/10.1016/j.neuroimage.2016.07.040
- Fixed premutation for xclass_cv designs
- Demos for creating permutation designs and using our demo data
- Improved figure handling for plotting selected voxels

* 3.91 - 2016/07/09
- Minor bugfix in decoding_example_afni.m

* 3.90 - 2016/07/07
- Added AFNI support

* 3.60 - 2016/06/29
- Added support for reading 4D data (e.g. 4D nifti files)

* 3.52 - 2015/12/11
- Minor: changed coding in cfg.results.write. Now write = 1 writes both img 
  and mat file, and = 2 writes mat-file only [default: write = 1].

* 3.51 - 2015/11/05
- Added ensemble classification method for balancing of unbalanced data 
  and for balancing confounds
- demos run again (tiny and uncritical bug)
- minor improvement in visualisation functions

* 3.50 - 2015/10/01
- introduced similarity analysis
- updated license file
- other bugfixes

* 3.30 - 2015/07/22
- Added misc as new input (currently only for passing residuals)
- Allow scaling of each chunk separately
- Allow scaling using covariance of residuals
- New function decoding_load_misc to load e.g. residuals

* 3.10 - 2015/07/07
- introduced possibility to use multi-mask (multiple ROI masks in one file, indexed by integers)
- will also write as one file if one mask file is provided
- adapted decoding_load_data.m, load_mask.m, decoding_write_results.m and get_n_decodings.m for that purpose
- removed unneccessary if-clause in decoding.m
- added info to template scripts and tutorial
- updated license file.

* 3.06 - 2015/05/07
- Added a check for unbalanced test data.

* 3.04 - 2015/04/14
- Updated decoding_tutorial and FAQ.txt and added a missing function for 
passing data without classification.

* 3.03 - 2015/03/02
- Introduced LDA as additional classifier and graphical user interface.

* 3.01 - 2015/01/09
- Official version accompanying our accepted PAPER!

Martin N Hebart*, Kai Goergen* and John-Dylan Haynes (2015). The Decoding Toolbox 
(TDT): A versatile software package for multivariate analyses of functional 
imaging data. Front. Neuroinform. 8:88. doi: 10.3389/fninf.2014.00088.
* Martin N Hebart and Kai Goergen contributed equally to this work.

This version is equivalent to 3.0 that was available to the reviewers except for very minor modifications.

Major changes to previous version:
- The main toolbox folder has been renamed from
     decoding_betaversion/
  to
     decoding_toolbox/
  because we do not really consider the toolbox as beta anymore
  For backward compatibility reasons, you might simply add a symbolic link 
  "decoding_betaversion" that points to "decoding_toolbox". This should work.
- A LOT OF OTHER COOL STUFF (e.g. some statistics were added)


***** END OF OFFICIAL BETA PHASE *****


* beta 2.7 - 2014/07/14
- results stored in .mat now always reported as struct
- introduced feature_transformation as additional step that can be carried 
 out (e.g. for dimensionality reduction or other approaches)
- allow several levels of feature selection in one decoding (e.g. first 
 filter and then recursive feature elimination
- made parameter selection general purpose. Caveat: No downwards 
 compatibility for existing scripts (now enter '-c' instead of 'c' for 
 selecting parameters). Downwards compatibility not useful!
- replaced 'useall'-option in feature selection with 'estimation' (default 
in other methods, better comparability
- debugged feature selection
- completely rewrote decoding_write_results to allow writing any results 
  as image and writing searchlight results as .mat (plus fixed a few bugs on the way)
- filedetails.txt and cfg.mat: now not named after first output, but just named res_
- allow to pass flag that training and test data can be non-independent (e.g. for illustrative results of weights)
- added possibility to calculate patterns
- added balanced_accuracy
- and quite a bit more


* beta 2.6 - 2014/01/07
- Changed cfg.files.step to cfg.files.chunk, because steps (i.e. decoding
iterations, e.g. cross-validation steps) can be different from chunks
(i.e. data that should be kept together when cross-validation is performed)
- Resolved bug of truncated warnings

* beta 2.5 - 2013/06/19
Lots of things added, including
- automatic visualisation of design matrix and saving as image to results
- real-time plot of selected voxels
- more checks for potential errors
- feature selection working
- and many more

* beta 2.2 - some time in the past
Stable version of 2.1, but still has 2.1 as number displayed when starting
Widely used last stable version before starting this log

* beta 2.1 - some time in the past